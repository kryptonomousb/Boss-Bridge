{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516103f33803806103f383398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b6102e0806101136000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f64e71f1461005c578063715018a6146100715780638da5cb5b14610079578063f2fde38b146100a2578063fc0c546a146100b5575b600080fd5b61006f61006a36600461023c565b6100c8565b005b61006f61014c565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f6100b0366004610266565b610160565b600154610086906001600160a01b031681565b6100d06101a3565b60015460405163095ea7b360e01b81526001600160a01b038481166004830152602482018490529091169063095ea7b3906044016020604051808303816000875af1158015610123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101479190610288565b505050565b6101546101a3565b61015e60006101d0565b565b6101686101a3565b6001600160a01b03811661019757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101a0816101d0565b50565b6000546001600160a01b0316331461015e5760405163118cdaa760e01b815233600482015260240161018e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461023757600080fd5b919050565b6000806040838503121561024f57600080fd5b61025883610220565b946020939093013593505050565b60006020828403121561027857600080fd5b61028182610220565b9392505050565b60006020828403121561029a57600080fd5b8151801515811461028157600080fdfea26469706673582212206bde2807491300e3ae202acf9e18291df06e93261de983ccdd96ff51f102a66f64736f6c63430008140033",
    "sourceMap": "473:272:37:-:0;;;536:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;571:10;;1307:97:18;;1361:31;;-1:-1:-1;;;1361:31:18;;1389:1;1361:31;;;471:51:41;444:18;;1361:31:18;;;;;;;1307:97;1414:32;1433:12;1414:18;:32::i;:::-;-1:-1:-1;594:5:37::1;:14:::0;;-1:-1:-1;;;;;;594:14:37::1;-1:-1:-1::0;;;;;594:14:37;;;::::1;::::0;;;::::1;::::0;;473:272;;3006:191:18;3080:16;3099:6;;-1:-1:-1;;;;;3116:17:18;;;-1:-1:-1;;;;;;3116:17:18;;;;;;3149:40;;3099:6;;;;;;;3149:40;;3080:16;3149:40;3069:128;3006:191;:::o;14:306:41:-;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:41;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:41:o;325:203::-;473:272:37;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631f64e71f1461005c578063715018a6146100715780638da5cb5b14610079578063f2fde38b146100a2578063fc0c546a146100b5575b600080fd5b61006f61006a36600461023c565b6100c8565b005b61006f61014c565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f6100b0366004610266565b610160565b600154610086906001600160a01b031681565b6100d06101a3565b60015460405163095ea7b360e01b81526001600160a01b038481166004830152602482018490529091169063095ea7b3906044016020604051808303816000875af1158015610123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101479190610288565b505050565b6101546101a3565b61015e60006101d0565b565b6101686101a3565b6001600160a01b03811661019757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101a0816101d0565b50565b6000546001600160a01b0316331461015e5760405163118cdaa760e01b815233600482015260240161018e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461023757600080fd5b919050565b6000806040838503121561024f57600080fd5b61025883610220565b946020939093013593505050565b60006020828403121561027857600080fd5b61028182610220565b9392505050565b60006020828403121561029a57600080fd5b8151801515811461028157600080fdfea26469706673582212206bde2807491300e3ae202acf9e18291df06e93261de983ccdd96ff51f102a66f64736f6c63430008140033",
    "sourceMap": "473:272:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:118;;;;;;:::i;:::-;;:::i;:::-;;2368:103:18;;;:::i;1693:87::-;1739:7;1766:6;-1:-1:-1;;;;;1766:6:18;1693:87;;;-1:-1:-1;;;;;615:32:41;;;597:51;;585:2;570:18;1693:87:18;;;;;;;2626:220;;;;;;:::i;:::-;;:::i;508:19:37:-;;;;;-1:-1:-1;;;;;508:19:37;;;624:118;1579:13:18;:11;:13::i;:::-;705:5:37::1;::::0;:29:::1;::::0;-1:-1:-1;;;705:29:37;;-1:-1:-1;;;;;1266:32:41;;;705:29:37::1;::::0;::::1;1248:51:41::0;1315:18;;;1308:34;;;705:5:37;;::::1;::::0;:13:::1;::::0;1221:18:41;;705:29:37::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;624:118:::0;;:::o;2368:103:18:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;2626:220::-;1579:13;:11;:13::i;:::-;-1:-1:-1;;;;;2711:22:18;::::1;2707:93;;2757:31;::::0;-1:-1:-1;;;2757:31:18;;2785:1:::1;2757:31;::::0;::::1;597:51:41::0;570:18;;2757:31:18::1;;;;;;;;2707:93;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;1858:166::-;1739:7;1766:6;-1:-1:-1;;;;;1766:6:18;752:10:27;1918:23:18;1914:103;;1965:40;;-1:-1:-1;;;1965:40:18;;752:10:27;1965:40:18;;;597:51:41;570:18;;1965:40:18;451:203:41;3006:191:18;3080:16;3099:6;;-1:-1:-1;;;;;3116:17:18;;;-1:-1:-1;;;;;;3116:17:18;;;;;;3149:40;;3099:6;;;;;;;3149:40;;3080:16;3149:40;3069:128;3006:191;:::o;14:173:41:-;82:20;;-1:-1:-1;;;;;131:31:41;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:41:o;659:186::-;718:6;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;810:29;829:9;810:29;:::i;:::-;800:39;659:186;-1:-1:-1;;;659:186:41:o;1353:277::-;1420:6;1473:2;1461:9;1452:7;1448:23;1444:32;1441:52;;;1489:1;1486;1479:12;1441:52;1521:9;1515:16;1574:5;1567:13;1560:21;1553:5;1550:32;1540:60;;1596:1;1593;1586:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approveTo(address,uint256)": "1f64e71f",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Boss Bridge Peeps\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"L1Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is responsible for locking & unlocking tokens on the L1 or L2It will approve the bridge to move money in and out of this contractIt's owner should be the bridge\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L1Vault.sol\":\"L1Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xae64e8bd850602d50ae007a0beab0683d1c46388649332e00a7b9791739612da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c74c490f14ccc54c1a3c3d9f294d046c2016d020efaf43c8c10f8efa3ad938c\",\"dweb:/ipfs/QmPpum5y3uQ4iThtFezEGRogFUvbGUKfk72ufJfsK1FHu3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"src/L1Vault.sol\":{\"keccak256\":\"0xbacb4222e8cabb5330e44f928cd3ae4af0097d29ef2926b3e64279c89be855a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf1d26d888ad3067cc54d01b2bf53dd61c40f0ab18f0e931b50e3d34cf8a1121\",\"dweb:/ipfs/QmZpYXyJR3HvHVQKH1AbHY9dUEWqJiNcUkveJpjV9qQDMV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveTo"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/L1Vault.sol": "L1Vault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348",
        "urls": [
          "bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0",
          "dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xae64e8bd850602d50ae007a0beab0683d1c46388649332e00a7b9791739612da",
        "urls": [
          "bzz-raw://4c74c490f14ccc54c1a3c3d9f294d046c2016d020efaf43c8c10f8efa3ad938c",
          "dweb:/ipfs/QmPpum5y3uQ4iThtFezEGRogFUvbGUKfk72ufJfsK1FHu3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3",
        "urls": [
          "bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204",
          "dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366",
        "urls": [
          "bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a",
          "dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA"
        ],
        "license": "MIT"
      },
      "src/L1Vault.sol": {
        "keccak256": "0xbacb4222e8cabb5330e44f928cd3ae4af0097d29ef2926b3e64279c89be855a8",
        "urls": [
          "bzz-raw://cf1d26d888ad3067cc54d01b2bf53dd61c40f0ab18f0e931b50e3d34cf8a1121",
          "dweb:/ipfs/QmZpYXyJR3HvHVQKH1AbHY9dUEWqJiNcUkveJpjV9qQDMV"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/L1Vault.sol",
    "id": 47240,
    "exportedSymbols": {
      "IERC20": [
        44230
      ],
      "L1Vault": [
        47239
      ],
      "Ownable": [
        43496
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:714:37",
    "nodes": [
      {
        "id": 47196,
        "nodeType": "PragmaDirective",
        "src": "33:23:37",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 47198,
        "nodeType": "ImportDirective",
        "src": "60:71:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47240,
        "sourceUnit": 43501,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47197,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44230,
              "src": "69:6:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47200,
        "nodeType": "ImportDirective",
        "src": "133:69:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47240,
        "sourceUnit": 43497,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47199,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43496,
              "src": "142:7:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47239,
        "nodeType": "ContractDefinition",
        "src": "473:272:37",
        "nodes": [
          {
            "id": 47206,
            "nodeType": "VariableDeclaration",
            "src": "508:19:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "522:5:37",
            "scope": 47239,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$44230",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 47205,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47204,
                "name": "IERC20",
                "nameLocations": [
                  "508:6:37"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44230,
                "src": "508:6:37"
              },
              "referencedDeclaration": 44230,
              "src": "508:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$44230",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47221,
            "nodeType": "FunctionDefinition",
            "src": "536:80:37",
            "nodes": [],
            "body": {
              "id": 47220,
              "nodeType": "Block",
              "src": "583:33:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47216,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47206,
                      "src": "594:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44230",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47217,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47209,
                      "src": "602:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44230",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "594:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44230",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 47219,
                  "nodeType": "ExpressionStatement",
                  "src": "594:14:37"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 47212,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "571:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 47213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "575:6:37",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "571:10:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 47214,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 47211,
                  "name": "Ownable",
                  "nameLocations": [
                    "563:7:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43496,
                  "src": "563:7:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "563:19:37"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47209,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "555:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 47221,
                  "src": "548:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$44230",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 47208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47207,
                      "name": "IERC20",
                      "nameLocations": [
                        "548:6:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44230,
                      "src": "548:6:37"
                    },
                    "referencedDeclaration": 44230,
                    "src": "548:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44230",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:15:37"
            },
            "returnParameters": {
              "id": 47215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:37"
            },
            "scope": 47239,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47238,
            "nodeType": "FunctionDefinition",
            "src": "624:118:37",
            "nodes": [],
            "body": {
              "id": 47237,
              "nodeType": "Block",
              "src": "694:48:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47233,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47223,
                        "src": "719:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47234,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47225,
                        "src": "727:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47230,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47206,
                        "src": "705:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44230",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "711:7:37",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44217,
                      "src": "705:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 47235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:29:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47236,
                  "nodeType": "ExpressionStatement",
                  "src": "705:29:37"
                }
              ]
            },
            "functionSelector": "1f64e71f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47228,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47227,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "684:9:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43407,
                  "src": "684:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "684:9:37"
              }
            ],
            "name": "approveTo",
            "nameLocation": "633:9:37",
            "parameters": {
              "id": 47226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47223,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "651:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 47238,
                  "src": "643:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47225,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "667:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 47238,
                  "src": "659:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:32:37"
            },
            "returnParameters": {
              "id": 47229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:0:37"
            },
            "scope": 47239,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47202,
              "name": "Ownable",
              "nameLocations": [
                "493:7:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43496,
              "src": "493:7:37"
            },
            "id": 47203,
            "nodeType": "InheritanceSpecifier",
            "src": "493:7:37"
          }
        ],
        "canonicalName": "L1Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 47201,
          "nodeType": "StructuredDocumentation",
          "src": "206:267:37",
          "text": "@title L1Vault\n @author Boss Bridge Peeps\n @notice This contract is responsible for locking & unlocking tokens on the L1 or L2\n @notice It will approve the bridge to move money in and out of this contract\n @notice It's owner should be the bridge"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47239,
          43496,
          44857
        ],
        "name": "L1Vault",
        "nameLocation": "482:7:37",
        "scope": 47240,
        "usedErrors": [
          43362,
          43367
        ],
        "usedEvents": [
          43373
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 37
}